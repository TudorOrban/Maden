// Code generated by MockGen. DO NOT EDIT.
// Source: maden/pkg/controller (interfaces: ServiceController)

// Package mocks is a generated GoMock package.
package mocks

import (
	shared "maden/pkg/shared"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockServiceController is a mock of ServiceController interface.
type MockServiceController struct {
	ctrl     *gomock.Controller
	recorder *MockServiceControllerMockRecorder
}

// MockServiceControllerMockRecorder is the mock recorder for MockServiceController.
type MockServiceControllerMockRecorder struct {
	mock *MockServiceController
}

// NewMockServiceController creates a new mock instance.
func NewMockServiceController(ctrl *gomock.Controller) *MockServiceController {
	mock := &MockServiceController{ctrl: ctrl}
	mock.recorder = &MockServiceControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceController) EXPECT() *MockServiceControllerMockRecorder {
	return m.recorder
}

// HandleIncomingService mocks base method.
func (m *MockServiceController) HandleIncomingService(arg0 shared.ServiceSpec) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleIncomingService", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleIncomingService indicates an expected call of HandleIncomingService.
func (mr *MockServiceControllerMockRecorder) HandleIncomingService(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleIncomingService", reflect.TypeOf((*MockServiceController)(nil).HandleIncomingService), arg0)
}
