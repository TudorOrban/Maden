// Code generated by MockGen. DO NOT EDIT.
// Source: maden/pkg/etcd (interfaces: Transactioner)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	shared "maden/pkg/shared"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransactioner is a mock of Transactioner interface.
type MockTransactioner struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionerMockRecorder
}

// MockTransactionerMockRecorder is the mock recorder for MockTransactioner.
type MockTransactionerMockRecorder struct {
	mock *MockTransactioner
}

// NewMockTransactioner creates a new mock instance.
func NewMockTransactioner(ctrl *gomock.Controller) *MockTransactioner {
	mock := &MockTransactioner{ctrl: ctrl}
	mock.recorder = &MockTransactionerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactioner) EXPECT() *MockTransactionerMockRecorder {
	return m.recorder
}

// PerformTransaction mocks base method.
func (m *MockTransactioner) PerformTransaction(arg0 context.Context, arg1, arg2 string, arg3 shared.ResourceType) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PerformTransaction", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// PerformTransaction indicates an expected call of PerformTransaction.
func (mr *MockTransactionerMockRecorder) PerformTransaction(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PerformTransaction", reflect.TypeOf((*MockTransactioner)(nil).PerformTransaction), arg0, arg1, arg2, arg3)
}
