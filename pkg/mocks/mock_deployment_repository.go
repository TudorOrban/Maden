// Code generated by MockGen. DO NOT EDIT.
// Source: maden/pkg/etcd (interfaces: DeploymentRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	shared "maden/pkg/shared"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDeploymentRepository is a mock of DeploymentRepository interface.
type MockDeploymentRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentRepositoryMockRecorder
}

// MockDeploymentRepositoryMockRecorder is the mock recorder for MockDeploymentRepository.
type MockDeploymentRepositoryMockRecorder struct {
	mock *MockDeploymentRepository
}

// NewMockDeploymentRepository creates a new mock instance.
func NewMockDeploymentRepository(ctrl *gomock.Controller) *MockDeploymentRepository {
	mock := &MockDeploymentRepository{ctrl: ctrl}
	mock.recorder = &MockDeploymentRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentRepository) EXPECT() *MockDeploymentRepositoryMockRecorder {
	return m.recorder
}

// CreateDeployment mocks base method.
func (m *MockDeploymentRepository) CreateDeployment(arg0 *shared.Deployment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDeployment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDeployment indicates an expected call of CreateDeployment.
func (mr *MockDeploymentRepositoryMockRecorder) CreateDeployment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDeployment", reflect.TypeOf((*MockDeploymentRepository)(nil).CreateDeployment), arg0)
}

// DeleteDeployment mocks base method.
func (m *MockDeploymentRepository) DeleteDeployment(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDeployment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDeployment indicates an expected call of DeleteDeployment.
func (mr *MockDeploymentRepositoryMockRecorder) DeleteDeployment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDeployment", reflect.TypeOf((*MockDeploymentRepository)(nil).DeleteDeployment), arg0)
}

// GetDeploymentByName mocks base method.
func (m *MockDeploymentRepository) GetDeploymentByName(arg0 string) (*shared.Deployment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeploymentByName", arg0)
	ret0, _ := ret[0].(*shared.Deployment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeploymentByName indicates an expected call of GetDeploymentByName.
func (mr *MockDeploymentRepositoryMockRecorder) GetDeploymentByName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeploymentByName", reflect.TypeOf((*MockDeploymentRepository)(nil).GetDeploymentByName), arg0)
}

// ListDeployments mocks base method.
func (m *MockDeploymentRepository) ListDeployments() ([]shared.Deployment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDeployments")
	ret0, _ := ret[0].([]shared.Deployment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDeployments indicates an expected call of ListDeployments.
func (mr *MockDeploymentRepositoryMockRecorder) ListDeployments() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDeployments", reflect.TypeOf((*MockDeploymentRepository)(nil).ListDeployments))
}

// UpdateDeployment mocks base method.
func (m *MockDeploymentRepository) UpdateDeployment(arg0 *shared.Deployment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDeployment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateDeployment indicates an expected call of UpdateDeployment.
func (mr *MockDeploymentRepositoryMockRecorder) UpdateDeployment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDeployment", reflect.TypeOf((*MockDeploymentRepository)(nil).UpdateDeployment), arg0)
}
