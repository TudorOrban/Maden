// Code generated by MockGen. DO NOT EDIT.
// Source: maden/pkg/orchestrator (interfaces: ServiceOrchestrator)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockServiceOrchestrator is a mock of ServiceOrchestrator interface.
type MockServiceOrchestrator struct {
	ctrl     *gomock.Controller
	recorder *MockServiceOrchestratorMockRecorder
}

// MockServiceOrchestratorMockRecorder is the mock recorder for MockServiceOrchestrator.
type MockServiceOrchestratorMockRecorder struct {
	mock *MockServiceOrchestrator
}

// NewMockServiceOrchestrator creates a new mock instance.
func NewMockServiceOrchestrator(ctrl *gomock.Controller) *MockServiceOrchestrator {
	mock := &MockServiceOrchestrator{ctrl: ctrl}
	mock.recorder = &MockServiceOrchestratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceOrchestrator) EXPECT() *MockServiceOrchestratorMockRecorder {
	return m.recorder
}

// OrchestrateServiceDeletion mocks base method.
func (m *MockServiceOrchestrator) OrchestrateServiceDeletion(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrchestrateServiceDeletion", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// OrchestrateServiceDeletion indicates an expected call of OrchestrateServiceDeletion.
func (mr *MockServiceOrchestratorMockRecorder) OrchestrateServiceDeletion(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrchestrateServiceDeletion", reflect.TypeOf((*MockServiceOrchestrator)(nil).OrchestrateServiceDeletion), arg0)
}
